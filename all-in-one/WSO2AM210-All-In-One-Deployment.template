AWSTemplateFormatVersion: 2010-09-09
Description: WSO2 API Manager 2.1.0 All-In-One CloudFormation Template
Parameters:
  AvailabilityZone:
    Description: Availability zone to be used
    Default: us-east-1a
    Type: String
  KeyName:
    Description: The name of an existing EC2 KeyPair to enable SSH access to the instances.
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: The EC2 instance type to be used for API Manager virtual machine
    Type: String
    Default: m1.medium
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SSLCertificateName:
    Description: The name of the SSL certificate to be used in the load balancer for HTTPS access.
    Default: wso2carbon
    Type: String
  DBClass:
    Description: The RDS database instance type
    Type: String
    Default: db.t1.micro
    AllowedValues:
      - db.t1.micro
      - db.m1.small
      - db.m1.medium
      - db.m1.large
      - db.m1.xlarge
      - db.m2.xlarge
      - db.m2.2xlarge
      - db.m2.4xlarge
      - db.m3.medium
      - db.m3.large
      - db.m3.xlarge
      - db.m3.2xlarge
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.m4.4xlarge
      - db.m4.10xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.m2.xlarge
      - db.m2.2xlarge
      - db.m2.4xlarge
      - db.cr1.8xlarge
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
    ConstraintDescription: must select a valid database instance type.
  DBName:
    Default: WSO2AM_DB
    Description: The API manager database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
  DBUser:
    NoEcho: 'true'
    Default: wso2
    Description: The API manager database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Default: wso2carbon
    Description: The API manager database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBRootPassword:
    NoEcho: 'true'
    Default: mysql
    Description: The API manager database root account password.
    Type: String
  WSO2APIMCapacity:
    Default: '1'
    Description: The initial number of API manager instances.
    Type: Number
    MinValue: '1'
    MaxValue: '5'
    ConstraintDescription: must be between 1 and 5 EC2 instances.
  DBAllocatedStorage:
    Default: '10'
    Description: The size of the database in Gb.
    Type: Number
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024Gb.
  UseRDSDBInstance:
    Default: 'false'
    Description: >-
      If set to true, create a RDS database instance for data persistence. Else create a MySQL
      server instance in the virtual machine.
    Type: String
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.large:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATPV64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.large:
      Arch: NATHVM64
    m1.small:
      Arch: NATPV64
    m1.medium:
      Arch: NATPV64
    m1.large:
      Arch: NATPV64
    m1.xlarge:
      Arch: NATPV64
    m2.xlarge:
      Arch: NATPV64
    m2.2xlarge:
      Arch: NATPV64
    m2.4xlarge:
      Arch: NATPV64
    m3.medium:
      Arch: NATHVM64
    m3.large:
      Arch: NATHVM64
    m3.xlarge:
      Arch: NATHVM64
    m3.2xlarge:
      Arch: NATHVM64
    m4.large:
      Arch: NATHVM64
    m4.xlarge:
      Arch: NATHVM64
    m4.2xlarge:
      Arch: NATHVM64
    m4.4xlarge:
      Arch: NATHVM64
    m4.10xlarge:
      Arch: NATHVM64
    c1.medium:
      Arch: NATPV64
    c1.xlarge:
      Arch: NATPV64
    c3.large:
      Arch: NATHVM64
    c3.xlarge:
      Arch: NATHVM64
    c3.2xlarge:
      Arch: NATHVM64
    c3.4xlarge:
      Arch: NATHVM64
    c3.8xlarge:
      Arch: NATHVM64
    c4.large:
      Arch: NATHVM64
    c4.xlarge:
      Arch: NATHVM64
    c4.2xlarge:
      Arch: NATHVM64
    c4.4xlarge:
      Arch: NATHVM64
    c4.8xlarge:
      Arch: NATHVM64
    g2.2xlarge:
      Arch: NATHVMG2
    g2.8xlarge:
      Arch: NATHVMG2
    r3.large:
      Arch: NATHVM64
    r3.xlarge:
      Arch: NATHVM64
    r3.2xlarge:
      Arch: NATHVM64
    r3.4xlarge:
      Arch: NATHVM64
    r3.8xlarge:
      Arch: NATHVM64
    i2.xlarge:
      Arch: NATHVM64
    i2.2xlarge:
      Arch: NATHVM64
    i2.4xlarge:
      Arch: NATHVM64
    i2.8xlarge:
      Arch: NATHVM64
    d2.xlarge:
      Arch: NATHVM64
    d2.2xlarge:
      Arch: NATHVM64
    d2.4xlarge:
      Arch: NATHVM64
    d2.8xlarge:
      Arch: NATHVM64
    hi1.4xlarge:
      Arch: NATHVM64
    hs1.8xlarge:
      Arch: NATHVM64
    cr1.8xlarge:
      Arch: NATHVM64
    cc2.8xlarge:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      PV64: ami-2a69aa47
      HVM64: ami-6869aa05
      HVMG2: ami-920f8984
    us-west-2:
      PV64: ami-7f77b31f
      HVM64: ami-7172b611
      HVMG2: ami-54d44234
    us-west-1:
      PV64: ami-a2490dc2
      HVM64: ami-31490d51
      HVMG2: ami-807f25e0
    eu-west-1:
      PV64: ami-4cdd453f
      HVM64: ami-f9dd458a
      HVMG2: ami-dc5861ba
    eu-west-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-886369ec
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      PV64: ami-6527cf0a
      HVM64: ami-ea26ce85
      HVMG2: ami-065d8d69
    ap-northeast-1:
      PV64: ami-3e42b65f
      HVM64: ami-374db956
      HVMG2: ami-a7694fc0
    ap-northeast-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-2b408b45
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      PV64: ami-df9e4cbc
      HVM64: ami-a59b49c6
      HVMG2: ami-fa75ca99
    ap-southeast-2:
      PV64: ami-63351d00
      HVM64: ami-dc361ebf
      HVMG2: ami-40a2ad23
    ap-south-1:
      PV64: NOT_SUPPORTED
      HVM64: ami-ffbdd790
      HVMG2: ami-d24a39bd
    us-east-2:
      PV64: NOT_SUPPORTED
      HVM64: ami-f6035893
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      PV64: NOT_SUPPORTED
      HVM64: ami-730ebd17
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      PV64: ami-1ad34676
      HVM64: ami-6dd04501
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      PV64: ami-77559f1a
      HVM64: ami-8e6aa0e3
      HVMG2: NOT_SUPPORTED
Conditions:
  Use-RDS-DBInstance: !Equals 
    - !Ref UseRDSDBInstance
    - 'true'
Resources:
  WSO2APIMLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      AvailabilityZones:
        - !Ref AvailabilityZone
      CrossZone: 'true'
      LBCookieStickinessPolicy:
        - PolicyName: CookieBasedPolicy
          CookieExpirationPeriod: '30'
      Listeners:
        - LoadBalancerPort: '443'
          InstancePort: '9443'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          SSLCertificateId: !Join 
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref SSLCertificateName
          PolicyNames:
            - CookieBasedPolicy
        - LoadBalancerPort: '8280'
          InstancePort: '8280'
          Protocol: HTTP
          InstanceProtocol: HTTP
        - LoadBalancerPort: '8243'
          InstancePort: '8243'
          Protocol: HTTPS
          InstanceProtocol: HTTPS
          SSLCertificateId: !Join 
            - ''
            - - 'arn:aws:iam::'
              - !Ref 'AWS::AccountId'
              - ':server-certificate'
              - /
              - !Ref SSLCertificateName
      HealthCheck:
        Target: 'HTTPS:9443/publisher/site/pages/login.jag'
        HealthyThreshold: '2'
        UnhealthyThreshold: '5'
        Interval: '10'
        Timeout: '5'
      Tags:
        - Key: User
          Value: imesh@wso2.com
  WSO2APIMSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Enable HTTP access via port 80 locked down to the load balancer + SSH
        access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '9443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8280'
          ToPort: '8280'
          SourceSecurityGroupOwnerId: !GetAtt 
            - WSO2APIMLoadBalancer
            - SourceSecurityGroup.OwnerAlias
          SourceSecurityGroupName: !GetAtt 
            - WSO2APIMLoadBalancer
            - SourceSecurityGroup.GroupName
        - IpProtocol: tcp
          FromPort: '8243'
          ToPort: '8243'
          SourceSecurityGroupOwnerId: !GetAtt 
            - WSO2APIMLoadBalancer
            - SourceSecurityGroup.OwnerAlias
          SourceSecurityGroupName: !GetAtt 
            - WSO2APIMLoadBalancer
            - SourceSecurityGroup.GroupName
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
  WSO2APIMDBSecurityGroup:
    Type: 'AWS::RDS::DBSecurityGroup'
    Condition: Use-RDS-DBInstance
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName: !Ref WSO2APIMSecurityGroup
      GroupDescription: database access
  WSO2APIMDBInstance:
    Type: 'AWS::RDS::DBInstance'
    Condition: Use-RDS-DBInstance
    Properties:
      DBName: !Ref DBName
      Engine: MySQL
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: !Ref DBClass
      AllocatedStorage: !Ref DBAllocatedStorage
      DBSecurityGroups:
        - !Ref WSO2APIMDBSecurityGroup
      Tags:
        - Key: User
          Value: imesh@wso2.com
    DependsOn:
      - WSO2APIMDBSecurityGroup
  WSO2APIMAutoscalingGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones:
        - !Ref AvailabilityZone
      LaunchConfigurationName: !Ref WSO2APIMLaunchConfig
      MinSize: '1'
      MaxSize: '5'
      DesiredCapacity: !Ref WSO2APIMCapacity
      LoadBalancerNames:
        - !Ref WSO2APIMLoadBalancer
      Tags:
        - Key: User
          Value: imesh@wso2.com
          PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: '1'
        MaxBatchSize: '1'
        PauseTime: PT15M
        WaitOnResourceSignals: 'false'
  WSO2APIMLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          wso2am_install:
            - install_cfn
            - !If 
              - Use-RDS-DBInstance
              - !Ref 'AWS::NoValue'
              - configure_mysql_server
            - install_wso2am
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - >
                    path=Resources.WSO2APIMLaunchConfig.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - !Ref 'AWS::StackName'
                  - '         --resource WSO2APIMLaunchConfig '
                  - '         --configsets wso2am_install '
                  - '         --region '
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        configure_mysql_server:
          packages:
            yum:
              mysql: []
              mysql-server: []
          files:
            /tmp/setup.mysql:
              content: !Sub >
                CREATE DATABASE ${DBName};

                CREATE USER '${DBUser}'@'localhost' IDENTIFIED BY
                '${DBPassword}';

                GRANT ALL ON ${DBName}.* TO '${DBUser}'@'localhost'; 

                FLUSH PRIVILEGES;
              group: root
              mode: '000400'
              owner: root
          commands:
            01_start_mysql_service:
              command: !Sub |
                service mysqld start
            02_set_mysql_password:
              command: !Sub |
                mysqladmin -u root password '${DBRootPassword}'
              test: !Sub >
                $(mysql ${DBName} -u root --password='${DBRootPassword}'
                >/dev/null 2>&1 </dev/null); (( $? != 0 ))
            03_create_database:
              command: !Sub |
                mysql -u root --password='${DBRootPassword}' < /tmp/setup.mysql
              test: !Sub >
                $(mysql ${DBName} -u root --password='${DBRootPassword}'
                >/dev/null 2>&1 </dev/null); (( $? !=0))
        install_wso2am:
          packages:
            yum:
              wget: []
              zip: []
          files:
            /tmp/install-wso2am:
              content: !Join 
                - ''
                - - |
                    #!/bin/bash
                  - |
                    set -e
                  - |
                    echo "Downloading Oracle JDK..."
                  - >
                    wget --tries=3 -c --header "Cookie:
                    oraclelicense=accept-securebackup-cookie"
                    http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz
                  - |
                    echo "Extracting Oracle JDK..."
                  - |
                    tar -xvf jdk-8u131-linux-x64.tar.gz
                  - |
                    echo "Setting JAVA_HOME=/mnt/jdk1.8.0_131"
                  - |
                    export JAVA_HOME=/mnt/jdk1.8.0_131
                  - |
                    echo "Downloading WSO2 API-M 2.1.0 distribution..."
                  - >
                    wget --tries=3 --user-agent="testuser"
                    --referer="http://connect.wso2.com/wso2/getform/reg/new_product_download"
                    http://product-dist.wso2.com/products/api-manager/2.1.0/wso2am-2.1.0.zip
                  - |
                    echo "Extracting WSO2 API-M 2.1.0 distribution..."
                  - |
                    unzip wso2am-2.1.0.zip
                  - |
                    echo "Configuring Carbon hostname..."
                  - !Join 
                    - ''
                    - - >-
                        sed -i
                        's%<!--HostName>www.wso2.org</HostName-->%<HostName>
                      - !GetAtt 
                        - WSO2APIMLoadBalancer
                        - DNSName
                      - >
                        </HostName>%g'
                        /mnt/wso2am-2.1.0/repository/conf/carbon.xml
                  - |
                    echo "Configuring Carbon management hostname..."
                  - !Join 
                    - ''
                    - - >-
                        sed -i
                        's%<!--MgtHostName>mgt.wso2.org</MgtHostName-->%<MgtHostName>
                      - !GetAtt 
                        - WSO2APIMLoadBalancer
                        - DNSName
                      - >
                        </MgtHostName>%g'
                        /mnt/wso2am-2.1.0/repository/conf/carbon.xml
                  - |
                    echo "Configuring API gateway hostname..."
                  - !Join 
                    - ''
                    - - >-
                        sed -i
                        's%<GatewayEndpoint>http://${carbon.local.ip}:${http.nio.port},https://${carbon.local.ip}:${https.nio.port}</GatewayEndpoint>%<GatewayEndpoint>http://
                      - !GetAtt 
                        - WSO2APIMLoadBalancer
                        - DNSName
                      - ':${http.nio.port},https://'
                      - !GetAtt 
                        - WSO2APIMLoadBalancer
                        - DNSName
                      - >
                        :${https.nio.port}</GatewayEndpoint>%g'
                        /mnt/wso2am-2.1.0/repository/conf/api-manager.xml
                  - |
                    echo "Configuring carbon datasource URL..."
                  - !Join 
                    - ''
                    - - >-
                        sed -i
                        's%<url>jdbc:h2:repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE</url>%<url>jdbc:mysql://
                      - !If 
                        - Use-RDS-DBInstance
                        - !GetAtt 
                          - WSO2APIMDBInstance
                          - Endpoint.Address
                        - localhost
                      - >
                        :3306/WSO2AM_DB?autoReconnect=true</url>%g'
                        /mnt/wso2am-2.1.0/repository/conf/datasources/master-datasources.xml
                  - |
                    echo "Configuring API-M datasource URL..."
                  - !Join 
                    - ''
                    - - >-
                        sed -i
                        's%<url>jdbc:h2:repository/database/WSO2AM_DB;DB_CLOSE_ON_EXIT=FALSE</url>%<url>jdbc:mysql://
                      - !If 
                        - Use-RDS-DBInstance
                        - !GetAtt 
                          - WSO2APIMDBInstance
                          - Endpoint.Address
                        - localhost
                      - >
                        :3306/WSO2AM_DB?autoReconnect=true</url>%g'
                        /mnt/wso2am-2.1.0/repository/conf/datasources/master-datasources.xml
                  - |
                    echo "Configuring API-M statistics datasource URL..."
                  - !Join 
                    - ''
                    - - >-
                        sed -i
                        's%<url>jdbc:h2:../tmpStatDB/WSO2AM_STATS_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000;AUTO_SERVER=TRUE</url>%<url>jdbc:mysql://
                      - !If 
                        - Use-RDS-DBInstance
                        - !GetAtt 
                          - WSO2APIMDBInstance
                          - Endpoint.Address
                        - localhost
                      - >
                        :3306/WSO2AM_DB?autoReconnect=true</url>%g'
                        /mnt/wso2am-2.1.0/repository/conf/datasources/master-datasources.xml
                  - |
                    echo "Configuring API-M message broker datasource URL..."
                  - !Join 
                    - ''
                    - - >-
                        sed -i
                        's%<url>jdbc:h2:repository/database/WSO2MB_DB;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000</url>%<url>jdbc:mysql://
                      - !If 
                        - Use-RDS-DBInstance
                        - !GetAtt 
                          - WSO2APIMDBInstance
                          - Endpoint.Address
                        - localhost
                      - >
                        :3306/WSO2AM_DB?autoReconnect=true</url>%g'
                        /mnt/wso2am-2.1.0/repository/conf/datasources/master-datasources.xml
                  - |
                    echo "Configuring datasource usernames..."
                  - !Join 
                    - ''
                    - - sed -i 's%<username>wso2carbon</username>%<username>
                      - !Ref DBUser
                      - >
                        </username>%g'
                        /mnt/wso2am-2.1.0/repository/conf/datasources/master-datasources.xml
                  - |
                    echo "Configuring datasource passwords..."
                  - !Join 
                    - ''
                    - - sed -i 's%<password>wso2carbon</password>%<password>
                      - !Ref DBPassword
                      - >
                        </password>%g'
                        /mnt/wso2am-2.1.0/repository/conf/datasources/master-datasources.xml
                  - |
                    echo "Configuring datasource drivers..."
                  - !Join 
                    - ''
                    - - >-
                        sed -i
                        's%<driverClassName>org.h2.Driver</driverClassName>%<driverClassName>
                      - >
                        com.mysql.jdbc.Driver</driverClassName>%g'
                        /mnt/wso2am-2.1.0/repository/conf/datasources/master-datasources.xml
                  - |
                    echo "Downloading MySQL Java Connector..."
                  - >
                    wget --tries=3 
                    https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.41.zip
                  - |
                    echo "Extracting and copying MySQL Connector..."
                  - |
                    unzip mysql-connector-java-5.1.41.zip
                  - >
                    cp -v
                    /mnt/mysql-connector-java-5.1.41/mysql-connector-java-5.1.41-bin.jar
                    /mnt/wso2am-2.1.0/repository/components/lib/
                  - |
                    echo "Starting WSO2 API-M 2.1.0..."
                  - |
                    /mnt/wso2am-2.1.0/bin/wso2server.sh -Dsetup start
              mode: '000500'
              owner: root
              group: root
          commands:
            01_configure_wso2am:
              command: /tmp/install-wso2am
              cwd: /mnt/
          services:
            sysvinit: {}
    Properties:
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WSO2APIMSecurityGroup
      KeyName: !Ref KeyName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WSO2APIMLaunchConfig '
            - '         --configsets wso2am_install '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WSO2APIMAutoscalingGroup '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

Outputs:
  WSO2APIMPublisherURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - WSO2APIMLoadBalancer
          - DNSName
        - /publisher
    Description: WSO2 API-M Publisher URL
  WSO2APIMStoreURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - WSO2APIMLoadBalancer
          - DNSName
        - /store
    Description: WSO2 API-M Store URL
